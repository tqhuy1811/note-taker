// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using note_taker_server.Models;

namespace notetakerserver.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190126074630_UpgradeLanguage")]
    partial class UpgradeLanguage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("note_taker_server.Models.Note", b =>
                {
                    b.Property<int>("NoteID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<int?>("ProgrammingLanguageLanguageId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("NoteID");

                    b.HasIndex("ProgrammingLanguageLanguageId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("note_taker_server.Models.ProgrammingLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("LanguageId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("note_taker_server.Models.Note", b =>
                {
                    b.HasOne("note_taker_server.Models.ProgrammingLanguage")
                        .WithMany("Notes")
                        .HasForeignKey("ProgrammingLanguageLanguageId");
                });
#pragma warning restore 612, 618
        }
    }
}
